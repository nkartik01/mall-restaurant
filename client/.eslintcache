[{"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\index.js":"1","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\App.js":"2","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\reportWebVitals.js":"3","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Landing.js":"4","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\AdminLogin.js":"5","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\PermissionsSetup.js":"6","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorSignup.js":"7","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorEdit.js":"8","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorLogin.js":"9","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\ListOperators.js":"10","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\TakeOrder.js":"11","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Header.js":"12","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Footer.js":"13","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\RegisterRFID.js":"14","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\ManipulateRFID.js":"15","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\AlertDiv.js":"16","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\store.js":"17","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\rootReducer.js":"18","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\reducers\\loadedData.js":"19","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\types\\loadedData.js":"20","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\action\\loadedData.js":"21","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\BillList.js":"22","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Bill.js":"23","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Payment.js":"24","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OrderSheet.js":"25","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Booking.js":"26","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Report.js":"27","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Availability.js":"28","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\RoomModal.js":"29","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\BookingModal.js":"30","C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Calendar.js":"31","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\index.js":"32","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\reportWebVitals.js":"33","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\App.js":"34","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\store.js":"35","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\rootReducer.js":"36","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\AdminLogin.js":"37","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorLogin.js":"38","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Landing.js":"39","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorEdit.js":"40","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Footer.js":"41","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorSignup.js":"42","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\TakeOrder.js":"43","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Header.js":"44","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\RegisterRFID.js":"45","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Bill.js":"46","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\ListOperators.js":"47","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\ManipulateRFID.js":"48","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Booking.js":"49","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\BillList.js":"50","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Report.js":"51","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\PermissionsSetup.js":"52","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Availability.js":"53","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\AlertDiv.js":"54","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OrderSheet.js":"55","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Payment.js":"56","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\BookingModal.js":"57","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\RoomModal.js":"58","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\reducers\\loadedData.js":"59","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\action\\loadedData.js":"60","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Calendar.js":"61","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\types\\loadedData.js":"62"},{"size":657,"mtime":1611784437903,"results":"63","hashOfConfig":"64"},{"size":2296,"mtime":1614591389617,"results":"65","hashOfConfig":"64"},{"size":375,"mtime":1611513154899,"results":"66","hashOfConfig":"64"},{"size":15483,"mtime":1614595762232,"results":"67","hashOfConfig":"64"},{"size":1737,"mtime":1612470182359,"results":"68","hashOfConfig":"64"},{"size":3346,"mtime":1612470182359,"results":"69","hashOfConfig":"64"},{"size":2667,"mtime":1612470182359,"results":"70","hashOfConfig":"64"},{"size":4794,"mtime":1612470110985,"results":"71","hashOfConfig":"64"},{"size":1870,"mtime":1612694403234,"results":"72","hashOfConfig":"64"},{"size":1354,"mtime":1612470111145,"results":"73","hashOfConfig":"64"},{"size":5234,"mtime":1612545815162,"results":"74","hashOfConfig":"64"},{"size":2366,"mtime":1614591467377,"results":"75","hashOfConfig":"64"},{"size":229,"mtime":1611655823770,"results":"76","hashOfConfig":"64"},{"size":1607,"mtime":1612470182359,"results":"77","hashOfConfig":"64"},{"size":12038,"mtime":1612971820321,"results":"78","hashOfConfig":"64"},{"size":568,"mtime":1612268610411,"results":"79","hashOfConfig":"64"},{"size":251,"mtime":1611781343649,"results":"80","hashOfConfig":"64"},{"size":199,"mtime":1611781780013,"results":"81","hashOfConfig":"64"},{"size":347,"mtime":1611786587743,"results":"82","hashOfConfig":"64"},{"size":27,"mtime":1611781966336,"results":"83","hashOfConfig":"64"},{"size":140,"mtime":1611782131207,"results":"84","hashOfConfig":"64"},{"size":4995,"mtime":1613128404755,"results":"85","hashOfConfig":"64"},{"size":6959,"mtime":1612476151541,"results":"86","hashOfConfig":"64"},{"size":23116,"mtime":1612973219748,"results":"87","hashOfConfig":"64"},{"size":26128,"mtime":1613149437654,"results":"88","hashOfConfig":"64"},{"size":5622,"mtime":1614595494708,"results":"89","hashOfConfig":"64"},{"size":9032,"mtime":1613034098202,"results":"90","hashOfConfig":"64"},{"size":1884,"mtime":1614595079077,"results":"91","hashOfConfig":"64"},{"size":3758,"mtime":1614410431816,"results":"92","hashOfConfig":"64"},{"size":32460,"mtime":1614595676180,"results":"93","hashOfConfig":"64"},{"size":11360,"mtime":1614453817132,"results":"94","hashOfConfig":"64"},{"size":657,"mtime":1611784437903,"results":"95","hashOfConfig":"96"},{"size":375,"mtime":1611513154899,"results":"97","hashOfConfig":"96"},{"size":2296,"mtime":1614591389617,"results":"98","hashOfConfig":"96"},{"size":251,"mtime":1611781343649,"results":"99","hashOfConfig":"96"},{"size":199,"mtime":1611781780013,"results":"100","hashOfConfig":"96"},{"size":1737,"mtime":1612470182359,"results":"101","hashOfConfig":"96"},{"size":1870,"mtime":1612694403234,"results":"102","hashOfConfig":"96"},{"size":18250,"mtime":1614598106804,"results":"103","hashOfConfig":"96"},{"size":4794,"mtime":1612470110985,"results":"104","hashOfConfig":"96"},{"size":229,"mtime":1611655823770,"results":"105","hashOfConfig":"96"},{"size":2667,"mtime":1612470182359,"results":"106","hashOfConfig":"96"},{"size":5234,"mtime":1612545815162,"results":"107","hashOfConfig":"96"},{"size":2366,"mtime":1614591467377,"results":"108","hashOfConfig":"96"},{"size":1607,"mtime":1612470182359,"results":"109","hashOfConfig":"96"},{"size":8040,"mtime":1614627226084,"results":"110","hashOfConfig":"96"},{"size":1354,"mtime":1612470111145,"results":"111","hashOfConfig":"96"},{"size":12038,"mtime":1612971820321,"results":"112","hashOfConfig":"96"},{"size":5624,"mtime":1614925753056,"results":"113","hashOfConfig":"96"},{"size":4995,"mtime":1613128404755,"results":"114","hashOfConfig":"96"},{"size":9070,"mtime":1614601731460,"results":"115","hashOfConfig":"96"},{"size":3346,"mtime":1612470182359,"results":"116","hashOfConfig":"96"},{"size":1884,"mtime":1614595079077,"results":"117","hashOfConfig":"96"},{"size":568,"mtime":1612268610411,"results":"118","hashOfConfig":"96"},{"size":26128,"mtime":1613149437654,"results":"119","hashOfConfig":"96"},{"size":27544,"mtime":1614925827068,"results":"120","hashOfConfig":"96"},{"size":44096,"mtime":1614712298601,"results":"121","hashOfConfig":"96"},{"size":3767,"mtime":1614626715320,"results":"122","hashOfConfig":"96"},{"size":347,"mtime":1611786587743,"results":"123","hashOfConfig":"96"},{"size":140,"mtime":1611782131207,"results":"124","hashOfConfig":"96"},{"size":11360,"mtime":1614453817132,"results":"125","hashOfConfig":"96"},{"size":27,"mtime":1611781966336,"results":"126","hashOfConfig":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xr1jok",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},"10qk6u4",{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"191"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"191"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\index.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\App.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\reportWebVitals.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Landing.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\AdminLogin.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\PermissionsSetup.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorSignup.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorEdit.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorLogin.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\ListOperators.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\TakeOrder.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Header.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Footer.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\RegisterRFID.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\ManipulateRFID.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\AlertDiv.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\store.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\rootReducer.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\reducers\\loadedData.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\types\\loadedData.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\action\\loadedData.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\BillList.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Bill.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Payment.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OrderSheet.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Booking.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Report.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Availability.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\RoomModal.js",[],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\BookingModal.js",["254","255"],"C:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Calendar.js",["256","257","258","259","260","261","262","263","264","265","266","267","268","269"],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\index.js",[],["270","271"],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\reportWebVitals.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\App.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\store.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\rootReducer.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\AdminLogin.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorLogin.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Landing.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorEdit.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Footer.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OperatorSignup.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\TakeOrder.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Header.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\RegisterRFID.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Bill.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\ListOperators.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\ManipulateRFID.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Booking.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\BillList.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Report.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\PermissionsSetup.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Availability.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\AlertDiv.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\OrderSheet.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Payment.js",["272"],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\BookingModal.js",["273"],"import React, { Component, Fragment } from \"react\";\r\n\r\nimport { Col, Row, Modal, Accordion, Card } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\nimport Webcam from \"react-webcam\";\r\nimport AlertDiv from \"../AlertDiv\";\r\nexport default class BookingModal extends Component {\r\n  state = {\r\n    picOf: \"photo\",\r\n    date: new Date(),\r\n    today: new Date(),\r\n    tomorrow: new Date(new Date().getTime() + 24 * 60 * 60 * 1000),\r\n    roomsList: [],\r\n  };\r\n  webcamRef1 = React.createRef();\r\n  webcamRef2 = React.createRef();\r\n  getRooms = async () => {\r\n    var res = await axios.get(require(\"../config.json\").url + \"booking/rooms\");\r\n    res = res.data;\r\n    var roomsList = [];\r\n    res.rooms.map((room) => {\r\n      roomsList.push({ value: room, label: room });\r\n      return null;\r\n    });\r\n    this.setState({ roomsList });\r\n  };\r\n  componentDidMount() {\r\n    this.getRooms();\r\n  }\r\n  render() {\r\n    var booking = this.props.booking;\r\n    var roomsList = this.state.roomsList;\r\n    if (!booking.bills) booking.bills = [];\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={() => {\r\n          this.props.setShow();\r\n        }}\r\n        size=\"xl\"\r\n      >\r\n        <form\r\n          onSubmit={async (e) => {\r\n            e.preventDefault();\r\n            var x = [];\r\n            booking.rooms = booking.rooms.map((room) => {\r\n              x.push({ arrivalTime: room.arrivalTime, checkoutTime: room.checkoutTime });\r\n              room.arrivalTime = new Date(room.arrivalTime).valueOf();\r\n              room.checkoutTime = new Date(room.checkoutTime).valueOf();\r\n              return room;\r\n            });\r\n            try {\r\n              var res = await axios.post(require(\"../config.json\").url + \"booking/editbooking\", { ...booking });\r\n              booking.bookingId = res.data.bookingId;\r\n              this.setState({});\r\n              AlertDiv(\"green\", \"Booking Successfully modified\");\r\n            } catch (err) {\r\n              console.log(err, err.response);\r\n              AlertDiv(\"red\", err.response.data);\r\n            } finally {\r\n              x.map((q, i) => {\r\n                booking.rooms[i] = { ...booking.rooms, ...q };\r\n              });\r\n              this.setState({});\r\n            }\r\n          }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Booking Id: {booking.bookingId}</Modal.Title>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                if (window.confirm(\"Do you want to copy the details from an existing room in this booking?\")) {\r\n                  var string = \"Choose the room you want to import data from: \";\r\n                  for (var i = 0; i < booking.rooms.length; i++) {\r\n                    try {\r\n                      string = string + \"\\n\" + (i + 1).toString() + \": \" + booking.rooms[i].room.label;\r\n                    } catch {}\r\n                  }\r\n                  var x = window.prompt(string);\r\n                  if (parseInt(x) > 0 && parseInt(x) <= booking.rooms.length) {\r\n                    booking.rooms.push({ ...booking.rooms[parseInt(x) - 1] });\r\n                  }\r\n                } else {\r\n                  booking.rooms.push({});\r\n                }\r\n                this.setState({});\r\n              }}\r\n            >\r\n              Add new room\r\n            </button>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <Accordion>\r\n              <Accordion.Toggle\r\n                eventKey=\"bills\"\r\n                as={Card.Header}\r\n                style={{ backgroundColor: \"green\", color: \"white\", fontWeight: \"bold\", border: \"2px solid black\", borderRadius: \"5px\" }}\r\n                align=\"center\"\r\n              >\r\n                Bills\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"bills\" style={{ width: \"95%\" }}>\r\n                <table className=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Sr. No.</th>\r\n                      <th scope=\"col\">Bill No.</th>\r\n                      <th scope=\"col\">Time</th>\r\n                      <th scope=\"col\">Amount</th>\r\n                      <th scope=\"col\">Operator</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {booking.bills.map((bill, billInd) => {\r\n                      return (\r\n                        <tr>\r\n                          <th scope=\"row\">{(billInd + 1).toString()}</th>\r\n                          <td>{bill.bill}</td>\r\n                          <td>{new Date(bill.at).toLocaleString(\"en-GB\")}</td>\r\n                          <td>{bill.amount}</td>\r\n                          <td>{bill.by}</td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </Accordion.Collapse>\r\n              <Accordion.Toggle\r\n                eventKey=\"rooms\"\r\n                as={Card.Header}\r\n                style={{ backgroundColor: \"green\", color: \"white\", fontWeight: \"bold\", border: \"2px solid black\", borderRadius: \"5px\" }}\r\n                align=\"center\"\r\n              >\r\n                Rooms\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse as={Card.Header} eventKey=\"rooms\" style={{ width: \"95%\" }}>\r\n                <Accordion defaultActiveKey=\"x\">\r\n                  {booking.rooms.map((room, roomInd) => {\r\n                    if (!room.arrivalTime) {\r\n                      room.arrivalTime =\r\n                        this.state.today.getFullYear().toString() +\r\n                        \"-\" +\r\n                        (this.state.today.getMonth() + 1).toString().padStart(2, 0) +\r\n                        \"-\" +\r\n                        this.state.today.getDate().toString().padStart(2, 0) +\r\n                        \"T12:00\";\r\n                    }\r\n                    if (!room.checkoutTime) {\r\n                      room.checkoutTime =\r\n                        this.state.tomorrow.getFullYear().toString() +\r\n                        \"-\" +\r\n                        (this.state.tomorrow.getMonth() + 1).toString().padStart(2, 0) +\r\n                        \"-\" +\r\n                        this.state.tomorrow.getDate().toString().padStart(2, 0) +\r\n                        \"T11:59\";\r\n                    }\r\n\r\n                    return (\r\n                      <Card>\r\n                        <div className=\"row\">\r\n                          <Accordion.Toggle as={Card.Header} eventKey={roomInd.toString()} style={{ width: \"95%\" }}>\r\n                            {room.room ? room.room.label : \"\"}\r\n                          </Accordion.Toggle>\r\n                          <button\r\n                            className=\"btn btn-secondary\"\r\n                            style={{ align: \"right\", minWidth: \"fit-content\", maxWidth: \"5%\" }}\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              if (!window.confirm(\"Are you sure you want to remove this room?\")) {\r\n                                return;\r\n                              }\r\n                              booking.rooms.splice(roomInd, 1);\r\n                              this.setState({});\r\n                            }}\r\n                          >\r\n                            x\r\n                          </button>\r\n                        </div>\r\n                        <Accordion.Collapse eventKey={roomInd.toString()}>\r\n                          <Card.Body>\r\n                            <Row>\r\n                              <Col sm={8}>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"name\">Name of Customer</label>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        value={room.name}\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n                                          room.name = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"Name\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"gstin\">GST In</label>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        value={room.gstin}\r\n                                        name=\"gstin\"\r\n                                        id=\"gstin\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n                                          room.gstin = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        placeholder=\"GST In\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"name\">room Rate</label>\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        value={room.roomRate}\r\n                                        name=\"roomRate\"\r\n                                        id=\"roomRate\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n                                          room.roomRate = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"roomRate\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-md-2\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"gstIncluded\">GST Included</label>\r\n                                      <br />\r\n                                      <label className=\"switch\">\r\n                                        <input\r\n                                          type=\"checkbox\"\r\n                                          checked={room.gstIncluded}\r\n                                          name=\"gstIncluded\"\r\n                                          id=\"gstIncluded\"\r\n                                          onChange={(e) => {\r\n                                            // console.log(e.ta)\r\n\r\n                                            room.gstIncluded = e.target.checked;\r\n                                            console.log(room.gstIncluded);\r\n                                            this.setState({});\r\n                                          }}\r\n                                          placeholder=\"gstIncluded\"\r\n                                        />\r\n                                        <span className=\"slider round\"></span>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"name\">Date of booking</label>\r\n                                      <input\r\n                                        type=\"date\"\r\n                                        defaultValue={\r\n                                          this.state.today.getFullYear().toString() +\r\n                                          \"-\" +\r\n                                          (this.state.today.getMonth() + 1).toString().padStart(2, 0) +\r\n                                          \"-\" +\r\n                                          this.state.today.getDate().toString().padStart(2, 0)\r\n                                        }\r\n                                        value={room.bookingDate}\r\n                                        name=\"bookingDate\"\r\n                                        id=\"bookingDate\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          room.bookingDate = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"Booking Date\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"name\">Arrival Date</label>\r\n                                      <input\r\n                                        type=\"datetime-local\"\r\n                                        value={room.arrivalTime}\r\n                                        name=\"arrivalTime\"\r\n                                        id=\"arrivalTime\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n                                          console.log(new Date(e.target.value).toLocaleString());\r\n                                          room.arrivalTime = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"arrivalTime\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"name\">Checkout Time</label>\r\n                                      <input\r\n                                        min={room.arrivalTime}\r\n                                        type=\"datetime-local\"\r\n                                        value={room.checkoutTime}\r\n                                        name=\"checkoutTime\"\r\n                                        id=\"checkoutTime\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          room.checkoutTime = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"checkoutTime\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                  <label htmlFor=\"name\">Customer Address</label>\r\n                                  <textarea\r\n                                    value={room.address}\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    className=\"form-control\"\r\n                                    onChange={(e) => {\r\n                                      e.preventDefault();\r\n\r\n                                      room.address = e.target.value;\r\n                                      this.setState({});\r\n                                    }}\r\n                                    required\r\n                                    placeholder=\"address\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"name\">Customer City</label>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        value={room.city}\r\n                                        name=\"city\"\r\n                                        id=\"city\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          room.city = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"city\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-md-8\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"name\">Customer Phone</label>\r\n\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        value={room.mobile}\r\n                                        name=\"mobile\"\r\n                                        id=\"mobile\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          room.mobile = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"mobile\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"name\">Males</label>\r\n\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        value={room.male}\r\n                                        name=\"male\"\r\n                                        id=\"male\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          room.male = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"male\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"name\">Females</label>\r\n\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        value={room.female}\r\n                                        name=\"female\"\r\n                                        id=\"female\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          room.female = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"female\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"name\">Children</label>\r\n\r\n                                      <input\r\n                                        type=\"number\"\r\n                                        value={room.children}\r\n                                        name=\"children\"\r\n                                        id=\"children\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          room.children = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"children\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-9\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"name\">Extra Bedding</label>\r\n\r\n                                      <div className=\"row\">\r\n                                        <div className=\"col-md-3\">\r\n                                          <label className=\"switch\">\r\n                                            <input\r\n                                              type=\"checkbox\"\r\n                                              checked={room.extraBed}\r\n                                              name=\"extraBed\"\r\n                                              id=\"extraBed\"\r\n                                              onChange={(e) => {\r\n                                                // console.log(e.ta)\r\n\r\n                                                room.extraBed = e.target.checked;\r\n                                                this.setState({});\r\n                                              }}\r\n                                              placeholder=\"extraBed\"\r\n                                            />\r\n                                            <span className=\"slider round\"></span>\r\n                                          </label>\r\n                                        </div>\r\n                                        <div className=\"col-md-5\">\r\n                                          <div className=\"form-group\">\r\n                                            <label htmlFor=\"extraBedCost\">Cost of Extra Bed</label>\r\n                                            <input\r\n                                              disabled={!room.extraBed}\r\n                                              type=\"number\"\r\n                                              value={room.extraBedCost}\r\n                                              name=\"extraBedCost\"\r\n                                              id=\"extraBedCost\"\r\n                                              className=\"form-control\"\r\n                                              onChange={(e) => {\r\n                                                e.preventDefault();\r\n\r\n                                                room.extraBedCost = e.target.value;\r\n                                                this.setState({});\r\n                                              }}\r\n                                              placeholder=\"extraBedCost\"\r\n                                            />\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                          <div className=\"form-group\">\r\n                                            <label htmlFor=\"extraBedNumber\">Number of beds</label>\r\n                                            <input\r\n                                              disabled={!room.extraBed}\r\n                                              type=\"number\"\r\n                                              value={room.extraBedNumber}\r\n                                              name=\"extraBedNumber\"\r\n                                              id=\"extraBedNumber\"\r\n                                              className=\"form-control\"\r\n                                              onChange={(e) => {\r\n                                                e.preventDefault();\r\n\r\n                                                room.extraBedNumber = e.target.value;\r\n                                                this.setState({});\r\n                                              }}\r\n                                              placeholder=\"extraBedNumber\"\r\n                                            />\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-md-3\">\r\n                                    <div className=\"row\">\r\n                                      <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"breakfast\">Breakfast</label>\r\n\r\n                                        <label className=\"switch\">\r\n                                          <input\r\n                                            type=\"checkbox\"\r\n                                            checked={room.breakfast}\r\n                                            name=\"breakfast\"\r\n                                            id=\"breakfast\"\r\n                                            onChange={(e) => {\r\n                                              // console.log(e.ta)\r\n\r\n                                              room.breakfast = e.target.checked;\r\n                                              console.log(room.breakfast);\r\n                                              this.setState({});\r\n                                            }}\r\n                                            placeholder=\"breakfast\"\r\n                                          />\r\n                                          <span className=\"slider round\"></span>\r\n                                        </label>\r\n                                      </div>\r\n                                      <div className=\"form-group col-md-6\">\r\n                                        <label htmlFor=\"dinner\">Dinner</label>\r\n                                        <label className=\"switch\">\r\n                                          <input\r\n                                            type=\"checkbox\"\r\n                                            checked={room.dinner}\r\n                                            name=\"dinner\"\r\n                                            id=\"dinner\"\r\n                                            onChange={(e) => {\r\n                                              // console.log(e.ta)\r\n\r\n                                              room.dinner = e.target.checked;\r\n                                              console.log(room.dinner);\r\n                                              this.setState({});\r\n                                            }}\r\n                                            placeholder=\"dinner\"\r\n                                          />\r\n                                          <span className=\"slider round\"></span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                  <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"from\">Coming From</label>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        value={room.from}\r\n                                        name=\"from\"\r\n                                        id=\"from\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          room.from = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"from\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"from\">Going To</label>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        value={room.to}\r\n                                        name=\"to\"\r\n                                        id=\"to\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          room.to = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"to\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"from\">Vehicle Number</label>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        value={room.Vehicle}\r\n                                        name=\"Vehicle\"\r\n                                        id=\"Vehicle\"\r\n                                        className=\"form-control\"\r\n                                        onChange={(e) => {\r\n                                          e.preventDefault();\r\n\r\n                                          room.Vehicle = e.target.value;\r\n                                          this.setState({});\r\n                                        }}\r\n                                        required\r\n                                        placeholder=\"Vehicle\"\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                      <div className=\"form-group\">\r\n                                        <label htmlFor=\"dj\">DJ</label>\r\n                                        <label className=\"switch\">\r\n                                          <input\r\n                                            type=\"checkbox\"\r\n                                            checked={room.dj}\r\n                                            name=\"dj\"\r\n                                            id=\"dj\"\r\n                                            onChange={(e) => {\r\n                                              // console.log(e.ta)\r\n\r\n                                              room.dj = e.target.checked;\r\n                                              console.log(room.dj);\r\n                                              this.setState({});\r\n                                            }}\r\n                                            placeholder=\"DJ\"\r\n                                          />\r\n                                          <span className=\"slider round\"></span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-3\">\r\n                                      <div className=\"form-group\">\r\n                                        <label htmlFor=\"ac\">AC</label>\r\n                                        <label className=\"switch\">\r\n                                          <input\r\n                                            type=\"checkbox\"\r\n                                            checked={room.ac}\r\n                                            name=\"ac\"\r\n                                            id=\"ac\"\r\n                                            onChange={(e) => {\r\n                                              // console.log(e.ta)\r\n\r\n                                              room.ac = e.target.checked;\r\n                                              console.log(room.ac);\r\n                                              this.setState({});\r\n                                            }}\r\n                                            placeholder=\"AC\"\r\n                                          />\r\n                                          <span className=\"slider round\"></span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-3\">\r\n                                      <div className=\"form-group\">\r\n                                        <label htmlFor=\"flower\">Flowers</label>\r\n                                        <label className=\"switch\">\r\n                                          <input\r\n                                            type=\"checkbox\"\r\n                                            checked={room.flower}\r\n                                            name=\"flower\"\r\n                                            id=\"flower\"\r\n                                            onChange={(e) => {\r\n                                              // console.log(e.ta)\r\n\r\n                                              room.flower = e.target.checked;\r\n                                              console.log(room.flower);\r\n                                              this.setState({});\r\n                                            }}\r\n                                            placeholder=\"Flowers\"\r\n                                          />\r\n                                          <span className=\"slider round\"></span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-3\">\r\n                                      <div className=\"form-group\">\r\n                                        <label htmlFor=\"lights\">Lights</label>\r\n                                        <label className=\"switch\">\r\n                                          <input\r\n                                            type=\"checkbox\"\r\n                                            checked={room.lights}\r\n                                            name=\"lights\"\r\n                                            id=\"lights\"\r\n                                            onChange={(e) => {\r\n                                              // console.log(e.ta)\r\n\r\n                                              room.lights = e.target.checked;\r\n                                              console.log(room.lights);\r\n                                              this.setState({});\r\n                                            }}\r\n                                            placeholder=\"Lights\"\r\n                                          />\r\n                                          <span className=\"slider round\"></span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                              <Col sm={4}>\r\n                                <div>\r\n                                  {/* <h5>{this.state.picOf}</h5> */}\r\n                                  {room.photo ? (\r\n                                    <Fragment>\r\n                                      <img src={room.photo} alt=\"not found\" />\r\n                                      <button\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          delete room.photo;\r\n                                          this.setState({});\r\n                                        }}\r\n                                      >\r\n                                        Retake Photo\r\n                                      </button>\r\n                                    </Fragment>\r\n                                  ) : (\r\n                                    <Fragment>\r\n                                      <Webcam\r\n                                        style={{ width: \"100%\" }}\r\n                                        audio={false}\r\n                                        ref={this.webcamRef1}\r\n                                        screenshotFormat=\"image/jpeg\"\r\n                                        videoConstraints={{\r\n                                          facingMode: \"user\",\r\n                                        }}\r\n                                      />\r\n                                      <button\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          const imageSrc = this.webcamRef1.current.getScreenshot();\r\n\r\n                                          room.photo = imageSrc;\r\n                                          console.log(room);\r\n                                          this.setState({});\r\n                                        }}\r\n                                      >\r\n                                        Capture Photo\r\n                                      </button>\r\n                                    </Fragment>\r\n                                  )}\r\n                                  {room.id ? (\r\n                                    <Fragment>\r\n                                      <img src={room.id} alt=\"not found\" />\r\n                                      <button\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          delete room.id;\r\n                                          this.setState({});\r\n                                        }}\r\n                                      >\r\n                                        Retake id\r\n                                      </button>\r\n                                    </Fragment>\r\n                                  ) : (\r\n                                    <Fragment>\r\n                                      <Webcam\r\n                                        style={{ width: \"100%\" }}\r\n                                        audio={false}\r\n                                        ref={this.webcamRef2}\r\n                                        screenshotFormat=\"image/jpeg\"\r\n                                        videoConstraints={{\r\n                                          facingMode: \"user\",\r\n                                        }}\r\n                                      />\r\n                                      <button\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          const imageSrc = this.webcamRef2.current.getScreenshot();\r\n\r\n                                          room.id = imageSrc;\r\n                                          console.log(room);\r\n                                          this.setState({});\r\n                                        }}\r\n                                      >\r\n                                        Capture id\r\n                                      </button>\r\n                                    </Fragment>\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                  <label htmlFor=\"room\">Room Number</label>\r\n\r\n                                  <Select\r\n                                    options={roomsList}\r\n                                    // isMulti\r\n                                    value={room.room}\r\n                                    onChange={(e) => {\r\n                                      // console.log(e);\r\n                                      room.room = e;\r\n                                      this.setState({});\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                          </Card.Body>\r\n                        </Accordion.Collapse>\r\n                      </Card>\r\n                    );\r\n                  })}\r\n                </Accordion>\r\n              </Accordion.Collapse>\r\n            </Accordion>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\" />\r\n            {/* <Button variant=\"secondary\">Close</Button>\r\n    <Button variant=\"primary\">Save changes</Button> */}\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\RoomModal.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\reducers\\loadedData.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\action\\loadedData.js",[],"c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\components\\Calendar.js",["274","275","276","277","278","279","280","281","282","283","284","285","286","287"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport RoomModal from \"./RoomModal\";\r\n// import { range } from \"moment-range\";\r\nexport default class Calendar extends React.Component {\r\n  weekdayshort = moment.weekdaysShort();\r\n\r\n  state = {\r\n    showCalendarTable: true,\r\n    showMonthTable: false,\r\n    dateObject: moment(),\r\n    allmonths: moment.months(),\r\n    showYearNav: false,\r\n    selectedDay: null,\r\n    show: [],\r\n  };\r\n  getBookings = async () => {\r\n    console.log(this.state.dateObject);\r\n    if (!this.state.selectedDay) {\r\n      this.state.selectedDay = Date.now();\r\n    }\r\n    var bookings = await axios.post(require(\"../config.json\").url + \"booking/room\", { date: this.state.dateObject.valueOf(), room: this.props.room });\r\n    bookings = bookings.data;\r\n    console.log(bookings);\r\n    var status = [];\r\n    var days = [];\r\n    for (let d = 1; d <= this.daysInMonth(); d++) {\r\n      days.push(d);\r\n    }\r\n    days.map((d) => {\r\n      var today = new Date(new Date(this.state.dateObject.valueOf()).setDate(d)).setHours(0, 0, 0, 0);\r\n      var tomorrow = today + 24 * 60 * 60 * 1000;\r\n      var room = this.props.room;\r\n      var a = [];\r\n      for (var i = today; i <= tomorrow; i = i + 600000) {\r\n        var c = 0;\r\n        for (var j = 0; j < bookings.dates[d].length; j++) {\r\n          for (var k = 0; k < bookings.dates[d][j].rooms.length; k++) {\r\n            if (!(bookings.dates[d][j].rooms[k].room.label === this.props.room)) {\r\n              continue;\r\n            }\r\n            var arrival = new Date(bookings.dates[d][j].rooms[k].arrivalTime);\r\n            var checkout = new Date(bookings.dates[d][j].rooms[k].checkoutTime);\r\n            if (i > arrival && i < checkout) {\r\n              c = 1;\r\n              a.push(\r\n                <td\r\n                  style={{ borderRightWidth: \"1px\", borderTop: \"30px solid red\", backgroundColor: \"red\", padding: \"0px\" }}\r\n                  title={\r\n                    new Date(bookings.dates[d][j].rooms[k].arrivalTime).toLocaleString(\"en-GB\") +\r\n                    \" to \" +\r\n                    new Date(bookings.dates[d][j].rooms[k].checkoutTime).toLocaleString(\"en-GB\") +\r\n                    \"\\nBooking Id: \" +\r\n                    bookings.dates[d][j].bookingId +\r\n                    \"\\nCustomer: \" +\r\n                    bookings.dates[d][j].rooms[k].name\r\n                  }\r\n                ></td>\r\n              );\r\n            }\r\n          }\r\n        }\r\n        if (c === 0) {\r\n          a.push(<td style={{ borderRightWidth: \"1px\", borderTop: \"30px solid green\", backgroundColor: \"green\", padding: \"0%\" }}></td>);\r\n        }\r\n      }\r\n      status.push(a);\r\n    });\r\n    this.setState({ bookings, status, days });\r\n    console.log(status);\r\n  };\r\n  componentDidMount() {\r\n    this.getBookings();\r\n  }\r\n  daysInMonth = () => {\r\n    return this.state.dateObject.daysInMonth();\r\n  };\r\n  year = () => {\r\n    return this.state.dateObject.format(\"Y\");\r\n  };\r\n  currentDay = () => {\r\n    return this.state.dateObject.format(\"D\");\r\n  };\r\n  firstDayOfMonth = () => {\r\n    let dateObject = this.state.dateObject;\r\n    let firstDay = moment(dateObject).startOf(\"month\").format(\"d\"); // Day of week 0...1..5...6\r\n    return firstDay;\r\n  };\r\n  month = () => {\r\n    return this.state.dateObject.format(\"MMMM\");\r\n  };\r\n  showMonth = (e, month) => {\r\n    this.setState({\r\n      showMonthTable: !this.state.showMonthTable,\r\n      showCalendarTable: !this.state.showCalendarTable,\r\n    });\r\n  };\r\n  setMonth = async (month) => {\r\n    let monthNo = this.state.allmonths.indexOf(month);\r\n    let dateObject = Object.assign({}, this.state.dateObject);\r\n    dateObject = moment(dateObject).set(\"month\", monthNo);\r\n    this.setState({\r\n      dateObject: dateObject,\r\n      showMonthTable: !this.state.showMonthTable,\r\n      showCalendarTable: !this.state.showCalendarTable,\r\n    });\r\n    const delay = (millis) =>\r\n      new Promise((resolve, reject) => {\r\n        setTimeout((_) => resolve(), millis);\r\n      });\r\n    await delay(100);\r\n    this.getBookings();\r\n  };\r\n  MonthList = (props) => {\r\n    let months = [];\r\n    props.data.map((data) => {\r\n      months.push(\r\n        <td\r\n          key={data}\r\n          className=\"calendar-month\"\r\n          onClick={(e) => {\r\n            this.setMonth(data);\r\n          }}\r\n        >\r\n          <span>{data}</span>\r\n        </td>\r\n      );\r\n    });\r\n    let rows = [];\r\n    let cells = [];\r\n\r\n    months.forEach((row, i) => {\r\n      if (i % 3 !== 0 || i == 0) {\r\n        cells.push(row);\r\n      } else {\r\n        rows.push(cells);\r\n        cells = [];\r\n        cells.push(row);\r\n      }\r\n    });\r\n    rows.push(cells);\r\n    let monthlist = rows.map((d, i) => {\r\n      return <tr>{d}</tr>;\r\n    });\r\n\r\n    return (\r\n      <table className=\"calendar-month\">\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"4\">Select a Month</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{monthlist}</tbody>\r\n      </table>\r\n    );\r\n  };\r\n  showYearEditor = () => {\r\n    this.setState({\r\n      showYearNav: true,\r\n      showCalendarTable: !this.state.showCalendarTable,\r\n    });\r\n  };\r\n\r\n  onPrev = () => {\r\n    let curr = \"\";\r\n    if (this.state.showMonthTable == true) {\r\n      curr = \"year\";\r\n    } else {\r\n      curr = \"month\";\r\n    }\r\n    this.setState({\r\n      dateObject: this.state.dateObject.subtract(1, curr),\r\n    });\r\n    this.getBookings();\r\n  };\r\n  onNext = () => {\r\n    let curr = \"\";\r\n    if (this.state.showMonthTable == true) {\r\n      curr = \"year\";\r\n    } else {\r\n      curr = \"month\";\r\n    }\r\n    this.setState({\r\n      dateObject: this.state.dateObject.add(1, curr),\r\n    });\r\n    this.getBookings();\r\n  };\r\n  setYear = (year) => {\r\n    // alert(year)\r\n    let dateObject = Object.assign({}, this.state.dateObject);\r\n    dateObject = moment(dateObject).set(\"year\", year);\r\n    this.setState({\r\n      dateObject: dateObject,\r\n      showMonthTable: !this.state.showMonthTable,\r\n      showYearNav: !this.state.showYearNav,\r\n      showMonthTable: !this.state.showMonthTable,\r\n    });\r\n    this.getBookings();\r\n  };\r\n  onYearChange = (e) => {\r\n    this.setYear(e.target.value);\r\n  };\r\n  getDates(startDate, stopDate) {\r\n    var dateArray = [];\r\n    var currentDate = moment(startDate);\r\n    var stopDate = moment(stopDate);\r\n    while (currentDate <= stopDate) {\r\n      dateArray.push(moment(currentDate).format(\"YYYY\"));\r\n      currentDate = moment(currentDate).add(1, \"year\");\r\n    }\r\n    return dateArray;\r\n  }\r\n  YearTable = (props) => {\r\n    let months = [];\r\n    let nextten = moment().set(\"year\", props).add(\"year\", 12).format(\"Y\");\r\n\r\n    let tenyear = this.getDates(props, nextten);\r\n\r\n    tenyear.map((data) => {\r\n      months.push(\r\n        <td\r\n          key={data}\r\n          className=\"calendar-month\"\r\n          onClick={(e) => {\r\n            this.setYear(data);\r\n          }}\r\n        >\r\n          <span>{data}</span>\r\n        </td>\r\n      );\r\n    });\r\n    let rows = [];\r\n    let cells = [];\r\n\r\n    months.forEach((row, i) => {\r\n      if (i % 3 !== 0 || i == 0) {\r\n        cells.push(row);\r\n      } else {\r\n        rows.push(cells);\r\n        cells = [];\r\n        cells.push(row);\r\n      }\r\n    });\r\n    rows.push(cells);\r\n    let yearlist = rows.map((d, i) => {\r\n      return <tr>{d}</tr>;\r\n    });\r\n\r\n    return (\r\n      <table className=\"calendar-month\">\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"4\">Select a Year</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{yearlist}</tbody>\r\n      </table>\r\n    );\r\n  };\r\n  onDayClick = (e, d) => {\r\n    // e.preventDefault();\r\n    // this.setState({\r\n    //   selectedDay: d,\r\n    // });\r\n    // this.getBookings();\r\n    this.state.show[d - 1] = true;\r\n    this.setState({});\r\n  };\r\n  render() {\r\n    let weekdayshortname = this.weekdayshort.map((day) => {\r\n      return <th key={day}>{day}</th>;\r\n    });\r\n    let blanks = [];\r\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n      blanks.push(<td className=\"calendar-day empty\">{\"\"}</td>);\r\n    }\r\n    let daysInMonth = [];\r\n    if (this.state.bookings) {\r\n      var days = this.state.days ? this.state.days : [];\r\n      days.map((d) => {\r\n        if (typeof this.state.show[d - 1] === \"undefined\") this.state.show.push(false);\r\n        let currentDay = d == this.currentDay() ? \"today\" : \"\";\r\n        daysInMonth.push(\r\n          <td key={d} className={`calendar-day ${currentDay}`}>\r\n            <span\r\n              onClick={(e) => {\r\n                this.onDayClick(e, d);\r\n              }}\r\n              align=\"center\"\r\n              //   style={{ alignContent: \"center\" }}\r\n            >\r\n              {/* <table>\r\n                <tbody> */}\r\n              <div align=\"center\" style={{ minWidth: \"100% \" }}>\r\n                {this.state.status[d - 1]}\r\n              </div>\r\n              {/* </tr> */}\r\n              {/* </tbody>\r\n              </table> */}\r\n              {d}\r\n            </span>\r\n\r\n            <RoomModal\r\n              room={{ bookings: this.state.bookings.dates[d], room: this.props.room }}\r\n              show={this.state.show[d - 1]}\r\n              date={new Date(this.state.dateObject.valueOf()).setDate(d)}\r\n              setShow={() => {\r\n                this.state.show[d - 1] = false;\r\n                this.setState({});\r\n              }}\r\n            />\r\n          </td>\r\n        );\r\n      });\r\n    }\r\n    var totalSlots = [...blanks, ...daysInMonth];\r\n    let rows = [];\r\n    let cells = [];\r\n\r\n    totalSlots.forEach((row, i) => {\r\n      if (i % 7 !== 0) {\r\n        cells.push(row);\r\n      } else {\r\n        rows.push(cells);\r\n        cells = [];\r\n        cells.push(row);\r\n      }\r\n      if (i === totalSlots.length - 1) {\r\n        // let insertRow = cells.slice();\r\n        rows.push(cells);\r\n      }\r\n    });\r\n\r\n    let daysinmonth = rows.map((d, i) => {\r\n      return <tr>{d}</tr>;\r\n    });\r\n\r\n    return (\r\n      <div className=\"tail-datetime-calendar\">\r\n        <div className=\"calendar-navi\">\r\n          <span\r\n            onClick={(e) => {\r\n              this.onPrev();\r\n            }}\r\n            class=\"calendar-button button-prev\"\r\n          />\r\n          {!this.state.showMonthTable && !this.state.showYearEditor && (\r\n            <span\r\n              onClick={(e) => {\r\n                this.showMonth();\r\n              }}\r\n              class=\"calendar-label\"\r\n            >\r\n              {this.month()},\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"calendar-label\"\r\n            onClick={(e) => {\r\n              this.showYearEditor();\r\n            }}\r\n          >\r\n            {this.year()}\r\n          </span>\r\n\r\n          <span\r\n            onClick={(e) => {\r\n              this.onNext();\r\n            }}\r\n            className=\"calendar-button button-next\"\r\n          />\r\n        </div>\r\n        <div className=\"calendar-date\">\r\n          {this.state.showYearNav && <this.YearTable props={this.year()} />}\r\n          {this.state.showMonthTable && <this.MonthList data={moment.months()} />}\r\n        </div>\r\n\r\n        {this.state.showCalendarTable && (\r\n          <div className=\"calendar-date\">\r\n            <table className=\"calendar-day\">\r\n              <thead>\r\n                <tr>{weekdayshortname}</tr>\r\n              </thead>\r\n              <tbody>{daysinmonth}</tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","c:\\Users\\aknar\\Documents\\GitHub\\mall-restaurant\\client\\src\\redux\\types\\loadedData.js",[],{"ruleId":"288","severity":1,"message":"289","line":47,"column":38,"nodeType":"290","messageId":"291","endLine":47,"endColumn":40},{"ruleId":"288","severity":1,"message":"289","line":61,"column":28,"nodeType":"290","messageId":"291","endLine":61,"endColumn":30},{"ruleId":"288","severity":1,"message":"289","line":31,"column":18,"nodeType":"290","messageId":"291","endLine":31,"endColumn":20},{"ruleId":"292","severity":1,"message":"293","line":34,"column":11,"nodeType":"294","messageId":"295","endLine":34,"endColumn":15},{"ruleId":"288","severity":1,"message":"289","line":117,"column":27,"nodeType":"290","messageId":"291","endLine":117,"endColumn":29},{"ruleId":"296","severity":1,"message":"297","line":134,"column":28,"nodeType":"298","messageId":"299","endLine":134,"endColumn":30},{"ruleId":"296","severity":1,"message":"297","line":167,"column":35,"nodeType":"298","messageId":"299","endLine":167,"endColumn":37},{"ruleId":"296","severity":1,"message":"297","line":179,"column":35,"nodeType":"298","messageId":"299","endLine":179,"endColumn":37},{"ruleId":"300","severity":1,"message":"301","line":197,"column":7,"nodeType":"302","messageId":"299","endLine":197,"endColumn":21},{"ruleId":"303","severity":1,"message":"304","line":207,"column":9,"nodeType":"294","messageId":"305","endLine":207,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":220,"column":24,"nodeType":"290","messageId":"291","endLine":220,"endColumn":26},{"ruleId":"296","severity":1,"message":"297","line":237,"column":28,"nodeType":"298","messageId":"299","endLine":237,"endColumn":30},{"ruleId":"306","severity":1,"message":"307","line":267,"column":5,"nodeType":"308","endLine":267,"endColumn":20},{"ruleId":"288","severity":1,"message":"289","line":281,"column":20,"nodeType":"290","messageId":"291","endLine":281,"endColumn":22},{"ruleId":"296","severity":1,"message":"297","line":283,"column":28,"nodeType":"298","messageId":"299","endLine":283,"endColumn":30},{"ruleId":"306","severity":1,"message":"307","line":309,"column":17,"nodeType":"308","endLine":309,"endColumn":32},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"288","severity":1,"message":"313","line":580,"column":58,"nodeType":"290","messageId":"314","endLine":580,"endColumn":60},{"ruleId":"288","severity":1,"message":"289","line":62,"column":28,"nodeType":"290","messageId":"291","endLine":62,"endColumn":30},{"ruleId":"288","severity":1,"message":"289","line":31,"column":18,"nodeType":"290","messageId":"291","endLine":31,"endColumn":20},{"ruleId":"292","severity":1,"message":"293","line":34,"column":11,"nodeType":"294","messageId":"295","endLine":34,"endColumn":15},{"ruleId":"288","severity":1,"message":"289","line":117,"column":27,"nodeType":"290","messageId":"291","endLine":117,"endColumn":29},{"ruleId":"296","severity":1,"message":"297","line":134,"column":28,"nodeType":"298","messageId":"299","endLine":134,"endColumn":30},{"ruleId":"296","severity":1,"message":"297","line":167,"column":35,"nodeType":"298","messageId":"299","endLine":167,"endColumn":37},{"ruleId":"296","severity":1,"message":"297","line":179,"column":35,"nodeType":"298","messageId":"299","endLine":179,"endColumn":37},{"ruleId":"300","severity":1,"message":"301","line":197,"column":7,"nodeType":"302","messageId":"299","endLine":197,"endColumn":21},{"ruleId":"303","severity":1,"message":"304","line":207,"column":9,"nodeType":"294","messageId":"305","endLine":207,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":220,"column":24,"nodeType":"290","messageId":"291","endLine":220,"endColumn":26},{"ruleId":"296","severity":1,"message":"297","line":237,"column":28,"nodeType":"298","messageId":"299","endLine":237,"endColumn":30},{"ruleId":"306","severity":1,"message":"307","line":267,"column":5,"nodeType":"308","endLine":267,"endColumn":20},{"ruleId":"288","severity":1,"message":"289","line":281,"column":20,"nodeType":"290","messageId":"291","endLine":281,"endColumn":22},{"ruleId":"296","severity":1,"message":"297","line":283,"column":28,"nodeType":"298","messageId":"299","endLine":283,"endColumn":30},{"ruleId":"306","severity":1,"message":"307","line":309,"column":17,"nodeType":"308","endLine":309,"endColumn":32},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'room' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'showMonthTable'.","ObjectExpression","no-redeclare","'stopDate' is already defined.","redeclared","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-native-reassign",["315"],"no-negated-in-lhs",["316"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation"]